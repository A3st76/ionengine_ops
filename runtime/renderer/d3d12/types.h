// Copyright Â© 2020-2021 Dmitriy Lukovenko. All rights reserved.

#pragma once

namespace ionengine::renderer {

enum class QueueType {
    General = D3D12_COMMAND_LIST_TYPE_DIRECT,
    Transfer = D3D12_COMMAND_LIST_TYPE_COPY,
    Compute = D3D12_COMMAND_LIST_TYPE_COMPUTE,
    Graphics = D3D12_COMMAND_LIST_TYPE_DIRECT
};

enum class ComponentSwizzleType {
    R = D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0,
    G = D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1, 
    B = D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2,
    A = D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3,
    Identity = 6,
    Zero = D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0,
    One = D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1
};

enum class ImageAspectType {
    Color = 0,
    Depth = 1,
    Stencil = 2,
    MetaData = 3
};

enum class ImageViewType {
    Single1D = D3D12_SRV_DIMENSION_TEXTURE1D,
    Single2D = D3D12_SRV_DIMENSION_TEXTURE2D,
    Single3D = D3D12_SRV_DIMENSION_TEXTURE3D,
    SingleCube = D3D12_SRV_DIMENSION_TEXTURECUBE,
    Array1D = D3D12_SRV_DIMENSION_TEXTURE1DARRAY,
    Array2D = D3D12_SRV_DIMENSION_TEXTURE2DARRAY,
    ArrayCube = D3D12_SRV_DIMENSION_TEXTURECUBEARRAY
};

enum class ImageType {
    Single1D = D3D12_RESOURCE_DIMENSION_TEXTURE1D,
    Single2D = D3D12_RESOURCE_DIMENSION_TEXTURE2D, 
    Single3D = D3D12_RESOURCE_DIMENSION_TEXTURE3D
};

enum class ImageFormat {
    Undefined = DXGI_FORMAT_UNKNOWN,
    R8UNorm = DXGI_FORMAT_R8_UNORM,
    R8SNorm = DXGI_FORMAT_R8_SNORM,
    R8UInt = DXGI_FORMAT_R8_UINT,
    R8SInt = DXGI_FORMAT_R8_SINT,
    R8G8UNorm = DXGI_FORMAT_R8G8_UNORM,
    R8G8SNorm = DXGI_FORMAT_R8G8_SNORM,
    R8G8UInt = DXGI_FORMAT_R8G8_UINT,
    R8G8SInt = DXGI_FORMAT_R8G8_SINT,
    R8G8B8A8UNorm = DXGI_FORMAT_R8G8B8A8_UNORM,
    R8G8B8A8SNorm = DXGI_FORMAT_R8G8B8A8_SNORM,
    R8G8B8A8UInt = DXGI_FORMAT_R8G8B8A8_UINT,
    R8G8B8A8SInt = DXGI_FORMAT_R8G8B8A8_SINT,
    R16UNorm = DXGI_FORMAT_R16_UNORM,
    R16SNorm = DXGI_FORMAT_R16_SNORM,
    R16UInt = DXGI_FORMAT_R16_UINT,
    R16SInt = DXGI_FORMAT_R16_SINT,
    R16G16UNorm = DXGI_FORMAT_R16G16_UNORM,
    R16G16SNorm = DXGI_FORMAT_R16G16_SNORM,
    R16G16UInt = DXGI_FORMAT_R16G16_UINT,
    R16G16SInt = DXGI_FORMAT_R16G16_SINT,
    R16G16B16A16UNorm = DXGI_FORMAT_R16G16B16A16_UNORM,
    R16G16B16A16SNorm = DXGI_FORMAT_R16G16B16A16_SNORM,
    R16G16B16A16UInt = DXGI_FORMAT_R16G16B16A16_UINT,
    R16G16B16A16SInt = DXGI_FORMAT_R16G16B16A16_SINT,
    R32UInt = DXGI_FORMAT_R32_UINT,
    R32SInt = DXGI_FORMAT_R32_SINT,
    R32G32UInt = DXGI_FORMAT_R32G32_UINT,
    R32G32SInt = DXGI_FORMAT_R32G32_SINT,
    R32G32B32UInt = DXGI_FORMAT_R32G32B32_UINT,
    R32G32B32SInt = DXGI_FORMAT_R32G32B32_SINT,
    R32G32B32A32UInt = DXGI_FORMAT_R32G32B32A32_UINT,
    R32G32B32A32SInt = DXGI_FORMAT_R32G32B32A32_SINT
};

}